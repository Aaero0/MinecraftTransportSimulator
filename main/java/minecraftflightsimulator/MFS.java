package minecraftflightsimulator;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraftforge.common.config.Configuration;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.network.simpleimpl.SimpleNetworkWrapper;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

@Mod(modid = MFS.MODID, name = MFS.MODNAME, version = MFS.MODVER)
public class MFS {
	public static final String MODID="mfs";
	public static final String MODNAME="Minecraft Flight Simulator";
	public static final String MODVER="5.0.0";

	public static double planeSpeedFactor;
	public static double fuelUsageFactor;
	public static String heavyItems;
	public static double propellerDamageFactor;
	public static Map<String, Double> fluidValues = new HashMap<String, Double>();
	
	public static Configuration config;
	@Instance(value = MFS.MODID)
	public static MFS instance;
	public static final SimpleNetworkWrapper MFSNet = NetworkRegistry.INSTANCE.newSimpleChannel("MFSNet");
	@SidedProxy(clientSide="minecraftflightsimulator.ClientProxy", serverSide="minecraftflightsimulator.CommonProxy")
	public static CommonProxy proxy;
	public static final CreativeTabs tabMFS = new CreativeTabs("tabMFS") {
	    @Override
		@SideOnly(Side.CLIENT)
	    public Item getTabIconItem() {
	    	return MFS.proxy.planeMC172;
	    }
	    
	    @Override
	    @SideOnly(Side.CLIENT)
	    public void displayAllReleventItems(List givenList){
	    	super.displayAllReleventItems(givenList);
	    	ItemStack[] itemArray = (ItemStack[]) givenList.toArray(new ItemStack[givenList.size()]); 
	    	int currentIndex = 0;
	    	for(int i=0; i<proxy.itemList.size(); ++i){
	    		for(int j=0; j<givenList.size(); ++j){
	    			if(proxy.itemList.get(i).equals(itemArray[j].getItem())){
	    				givenList.set(currentIndex++, itemArray[j]);
	    			}else{
	    			}
	    		}
	    	}
	    }
	};
	
	@EventHandler
	public void PreInit(FMLPreInitializationEvent event){
		proxy.preInit();
		this.initConfigFile(event);
		this.initModMetadata(event);
	}
	
	@EventHandler
	public void Init(FMLInitializationEvent event){
		proxy.init();
	}
	
	private void initConfigFile(FMLPreInitializationEvent event){
		config = new Configuration(event.getSuggestedConfigurationFile());
		config.load();
		planeSpeedFactor = config.get(config.CATEGORY_GENERAL, "PlaneSpeedFactor", 0.5F, "Factor to apply to plane movement.  \n1 is the realistic value, but this makes planes move too fast for Minecraft. Adjust with caution.").getDouble();
		fuelUsageFactor = config.get(config.CATEGORY_GENERAL, "FuelUsageFactor", 1.0F, "Factor times which engines use fuel.  \nChange this if you think engines use fuel too fast or slow.").getDouble();
		heavyItems = config.get(config.CATEGORY_GENERAL, "HeavyItems", "diamond, iron, gold, coal, ore, stone", "Any item that contains these words will be counted as heavy (double mass) when considering plane mass.  \nChange and tweak to your liking.").getString();
		propellerDamageFactor = config.get(config.CATEGORY_GENERAL, "PropellerDamageFactor", 1.0F, "Factor for damage caused by a propeller.").getDouble();
		config.save();
	}
	
	private void initModMetadata(FMLPreInitializationEvent event){
        ModMetadata meta = event.getModMetadata();
        meta.name = "Minecraft Flight Simulator";
        meta.description = "Realistic planes for Minecraft!";
        meta.authorList.clear();
        meta.authorList.add("don_bruce & CO.");
        meta.logoFile = "Vingette.png";
        meta.url = "http://minecraft.curseforge.com/projects/minecraft-flight-simulator";
        
        meta.modId = this.MODID;
        meta.version = this.MODVER;
        meta.autogenerated = false;
	}
}

